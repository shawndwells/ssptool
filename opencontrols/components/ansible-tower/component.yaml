---
documentation_complete: false
name: Ansible Tower
schema_version: 3.0.0
satisfies:
##
## BEGINNING OF:
## ACCESS CONTROL
##

- control_key: AC-1
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: ''
 #   - text: |
 #       'AC-1 is an organizational control outside the scope of
 #       Ansible Tower.'

- control_key: AC-2
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: ''
#    - text: |
#        'AC-2 is an organizational control outside the scope of
#        Ansible Tower configuration. Technical enablement of
#        the organizational processes are covered in AC-2 subcontrols,
#        such as AC-2(2) and AC-2(3).'

- control_key: AC-2 (1)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: planned
  narrative:
    - text: |
        'Documentation for this requirement is being tracked on
        GitHub:

        https://github.com/ComplianceAsCode/redhat/issues/465'

- control_key: AC-3
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: complete
  narrative:
    - text: |
        'There are three types of Tower users that can be assigned:

        - Normal User
        Normal Users have read and write access limited to the resources
        (such as inventory, projects, and job templates) for which that user
        has been granted the appropriate roles and privileges.

        - System Auditor
        Auditors implicitly inherit the read-only capability for all objects
        within the Tower environment.

        - System Adminisrator
        A Tower System Administrator (also known as a Superuser) has admin,
        read, and write privileges over the entire Tower installation. A
        System Administrator is typically responsible for managing all
        aspects of Tower and delegating responsibilities for day-to-day
        work to various Users.

        Ansible Tower uses role-based access control to provide the ability
        to read, modify, and administer projects, inventories, job templates,
        and other Ansible Tower elements. The role-based access control policies
        can be defined per-user, or per user type as indicated above.

        Additional detail can be found in the Ansible Tower documentation:

        https://docs.ansible.com/ansible-tower/latest/html/userguide/users.html'

- control_key: AC-7
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: partial
  narrative:
    - key: a
      text: |
        'Ansible Tower does not currently have the capability to enforce limits
        on consecutive logon attempts.

        To satisfy this control an external authentication service, such
        as Red Hat IdM, must be used. This control is not applicable to
        Ansible Tower when an external authentication service is used.'
    - key: b
      text: |
        'Ansible Tower does not currently have the capability automatically
        lock an account for an organizationally-defined time period, nor
        does Ansible Tower have the capability to lock an account until
        released by an administrator.

        To satisfy those elemenets of this control an external
        authentication service, such as Red Hat IdM, must be used.
        Those two elements of this control are not applicable to
        Ansible Tower when an external authentication service
        is used.

        Ansible Tower does not currently have the ability to delay
        logon prompts according to an organizationally-defined delay
        algorithm when the maximum number of unsuccessful attempts is
        exceeded. Ansible Tower cannot be configured to perform
        this functionality; delay of further logon prompts is a permanent
        finding.'

- control_key: AC-8
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: complete
  narrative:
    - key: a
      text: |
        'Ansible Tower supports configuration of custom system use
        notifications.

        From within the Tower web interface:

        (1) Select "Settings", which is the gear icon in the top right corner

        (2) Select "Configure Tower," which is the second icon in the third
        row

        (3) Select "User Interface"

        (4) Enter your system use notification in the "CUSTOM LOGIN INFO"
        field. Note breaks must use "\n"'
    - key: b
      text: |
        'Custom system use notifications are displayed on the logon screen
        prior to the "login" button. This is default, non-configurable
        behavior.'
    - key: c
      text: |
        'Ansible Tower does not differentiate logon screens between private and
        publicly accessible instances. Custom system use notifications
        for publicly accessible systems can be implemented using the
        procedures from AC-8(a).'

- control_key: AC-14
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: complete
  narrative:
    - text: |
        'Regardless of access mechanism, such as the Ansible Tower
        console, unauthenticated users will only be shown the
        system use notifications (as defined in AC-8) and login prompt. This is
        non-configurable behavior.

        External service APIs also require authentication
        prior to granting resource access.'

- control_key: AC-17
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: ''
#     - text: |
#        'This control reflects organizational procedures/policies, and is not
#        applicable to the configuration of Ansible Tower.'

- control_key: AC-18
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: ''
#    - text: |
#        'This control reflects organizational procedures/policies, and is not
#        applicable to the configuration of Ansible Tower.'

- control_key: AC-19
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: ''
#    - text: |
#        'This control reflects organizational procedures/policies, and is not
#        applicable to the configuration of Ansible Tower.'

- control_key: AC-20
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: ''
#    - text: |
#        'This control reflects organizational procedures/policies, and is not
#        applicable to the configuration of Ansible Tower.'

- control_key: AC-22
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: ''
#    - text: |
#        'This control reflects organizational procedures/policies, and is not
#        applicable to the configuration of Ansible Tower.'
##
## BEGINNING OF:
## AWARENESS AND TRAINING CONTROLS
##

- control_key: AT-1
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: |
        'This control reflects organizational procedure/policy and is not
        applicable to component-level configuration.'

- control_key: AT-2
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: |
        'This control reflects organizational procedure/policy and is not
        applicable to component-level configuration.'

- control_key: AT-2 (1)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: |
        'This control reflects organizational procedure/policy and is not
        applicable to component-level configuration.'

- control_key: AT-2 (2)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: |
        'This control reflects organizational procedure/policy and is not
        applicable to component-level configuration.'

- control_key: AT-3
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: |
        'This control reflects organizational procedure/policy and is not
        applicable to component-level configuration.'

- control_key: AT-3 (1)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: |
        'This control reflects organizational procedure/policy and is not
        applicable to component-level configuration.'

- control_key: AT-3 (2)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: |
        'This control reflects organizational procedure/policy and is not
        applicable to component-level configuration.'

- control_key: AT-3 (3)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: |
        'This control reflects organizational procedure/policy and is not
        applicable to component-level configuration.'

- control_key: AT-3 (4)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: |
        'This control reflects organizational procedure/policy and is not
        applicable to component-level configuration.'

- control_key: AT-4
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: |
        'This control reflects organizational procedure/policy and is not
        applicable to component-level configuration.'

- control_key: AT-5
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: |
        'As of NIST 800-53 rev4 this control was withdrawn
        and incorporated into PM-15.'
##
## BEGINNING OF:
## AUDIT AND ACCOUNTABILITY
##

- control_key: AU-1
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: ''

- control_key: AU-2
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: ''

- control_key: AU-3
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: complete
  narrative:
    - text: |
        'By default Ansible Tower generates audit records containing
        information that establishes what type of event occured,
        when the event occured, where the event occured, the source
        of the event, the outcome of the event, and the identity
        of individuals or subjects associated with the event.

        Ansible Tower cannot be configured to be out of compliance
        with this control.

        A sample audit record is provided below.

        TYPE OF EVENT:
        The "operation" field identifies the type of event recorded.
        In this case, a new user was created.

        WHEN THE EVENT OCCURED:
        The "timestamp" field indicates the system time of
        when the event occured. In this example the event happened
        at 2018-06-19T00:46:45.337458Z.

        WHERE THE EVENT OCCURED:
        The "X-API-Node" field indicates where the event occured. In
        this example, the host was tower.redhatgov.io.

        SOURCE OF EVENT:
        The "actor" field indicates the "alice" username initiated
        this event.

        OUTCOME OF EVENT:
        The "changes" field indicate the user was created with
        associated metadata such as first_name and last_name.

        IDENTITY OF INDIVIDUALS/OBJECTS INVOLVED:
        The "summary_fields" indicates an actor with the username "alice"
        created a new user with the username "bob."

        Full documentation of all available fields is
        available in the Ansible Tower product documentation:

        https://docs.ansible.com/ansible-tower/latest/html/towerapi/activity_stream.html


        ---
             HTTP 200 OK
             Allow: GET, HEAD, OPTIONS
             Content-Type: application/json
             Vary: Accept
             X-API-Node: tower.redhatgov.io
             X-API-Time: 0.739s
             ....
             {
                 "id": 25,
                 "type": "activity_stream",
                 "url": "/api/v1/activity_stream/25/",
                 "related": {
                     "user": [
                         "/api/v1/users/4/"
                     ],
                     "actor": "/api/v1/users/1/"
                 },
                 "summary_fields": {
                     "user": [
                         {
                             "username": "bob",
                             "first_name": "Bob",
                             "last_name": "Ross",
                             "id": 4
                         }
                     ],
                     "actor": {
                         "username": "alice",
                         "first_name": "Alice",
                         "last_name": "Liddel",
                         "id": 1
                     }
                 },
                 "timestamp": "2018-06-19T00:46:45.337458Z",
                 "operation": "create",
                 "changes": {
                     "username": "bob",
                     "first_name": "Bob",
                     "last_name": "Ross",
                     "is_active": true,
                     "id": 4,
                     "is_superuser": false,
                     "is_staff": false,
                     "password": "hidden",
                     "email": "bob@ross.com",
                     "date_joined": "2018-06-19 00:46:45.314590+00:00"
                 },
                 "object1": "user",
                 "object2": "",
                 "object_association": ""
             }
        ---'

- control_key: AU-4
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: ''

- control_key: AU-5
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - key: a
      text: |
        'Ansible Tower utilizes the audit and syslog subsystems of the
        underlying operating system. Responses to audit subsystem
        failures is configured in the operating system and not
        Ansible Tower.'
    - key: b
      text: |
        'Ansible Tower utilizes the audit and syslog subsystems of the
        underlying operating system. Responses to audit subsystem
        failures is configured in the operating system and not
        Ansible Tower.'

- control_key: AU-6
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: ''

- control_key: AU-8
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: complete
  narrative:
    - key: a
      text: |
        'Ansible Tower relies on the time services
        provided by the underlying operating system. Utilization of
        platform-provided time services is default, non-configurable
        behavior.'

    - key: b
      text: |
        'Ansible Tower utilizes the time zone settings of the underlying
        operating system. This is default, non-configurable behavior.'

- control_key: AU-9
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: complete
  narrative:
    - text: |
        'Ansible Tower logfiles have been consolidated and can be easily
        accessed from two centralized locations:

        - /var/log/tower/
        - /var/log/supervisor/

        Each directory is protected by operating system-level
        mandatory access control settings and require administrative (root)
        privilege to access.

        Log data kept within Ansible Tower, such as the Activity Stream,
        is presented only when the accessing user has permissions over the
        audited object (e.g. shows audit logs only of system groups belonging
        to the accessing user).'

- control_key: AU-11
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: |
        'For locally retained logs, such as those recorded to
        /var/log/ansible, Ansible Tower utilizes the audit subsystems
        of the host operating system. Retention of local logs is
        reflective of the operating system settings and not Ansible Tower.

        Retention of audit logs sent to an aggregation service, such
        as Elastic, is configured by the central aggregation service and
        outside the scope of configuring Ansible Tower.

- control_key: AU-12
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: planned
  narrative:
    - key: a
      text: |
        'By default, Ansible Tower audits the following events.
        Audit of these events is automatic and not user configurable.

        - Audit User & Group Management Events,
        User modify (Success and Failure)
        - Audit User & Group Management Events,
        User add (Success and Failure)
        - Audit User & Group Management Events,
        User delete (Success and Failure)
        - Audit User & Group Management Events,
        Group/Role add (Success and Failure)
        - Audit User & Group Management Events,
        Group/Role delete (Success and Failure)
        - Audit User & Group Management Events,
        Group/Role modify (Success and Failure)


        The following BugZillas track feature creation for Ansible Tower
        to audit certain events:

        - Audit Logons (Success and Failure):
        https://github.com/ComplianceAsCode/redhat/issues/345

        - Audit Logoff (Success and Failure):
        https://github.com/ComplianceAsCode/redhat/issues/346

        - Audit File & Object Creation (Success and Failure):

        - Audit File & Object Access (Success and Failure):
        https://github.com/ComplianceAsCode/redhat/issues/348

        - Audit File & Object Deletion (Success and Failure)

        - Audit File & Object Modification (Success and Failure)

        - Audit File & Object Permission Changes (Success and Failure):
        https://github.com/ComplianceAsCode/redhat/issues/351

        - Audit File & Object Ownership Modifications (Success and Failure):
        https://github.com/ComplianceAsCode/redhat/issues/352

        - Audit User & Group Management Events, User suspend (Success and Failure):
        https://github.com/ComplianceAsCode/redhat/issues/451

        - Audit User & Group Management Events, User lock (Success and Failure):
        https://github.com/ComplianceAsCode/redhat/issues/452

        - Audit Use of Privileged/Special Rights, security or policy changes (Success and Failure):
        https://github.com/ComplianceAsCode/redhat/issues/456

        - Audit Use of Privileged/Special Rights, configuration changes (Success and Failure):
        https://github.com/ComplianceAsCode/redhat/issues/457

        - Audit Use of Privileged/Special Rights, Admin or root-level access (Success and Failure):
        - Audit Privilege/Role Escalation (Success and Failure):

        - Audit and Log Data Access (Success and Failure):
        https://github.com/ComplianceAsCode/redhat/issues/460

        - Export of Information (Success and Failure):
        https://github.com/ComplianceAsCode/redhat/issues/461 Information within
        Ansible Tower pertains to the Ansible Tower configuration. While
        Playbooks/Projects may be created within Tower locally and can be
        exported, the best practices recommend that the actual automation
        functions be maintained outside of Tower - in a version controlled
        repository and/or a CMDB for instance. The Ansible Tower specific
        data can be exported using 2 methods:

        - The first method is to use the "setup.sh" script to back up the
          system:
          https://docs.ansible.com/ansible-tower/latest/html/administration/backup_restore.html
          This will successfully export all the Tower specific data including
          - the database
          - the SECRET_KEY file
          The per-system backups include:
          - custom user config files
          - job stdout
          - manual projects (if external version control systems are not being used to store playbooks)

          OS level controls methods (such as tripwire) could be used to check
          who ran the setup.sh script and when.

        - Information about Tower may be also gleaned via the APIs. For instance
          a list of users configured can be obtained from the following API endpoint: `GET /api/v2/users/`
          Example:
            ```
                    {
            "id": 15,
            "type": "user",
            "url": "/api/v2/users/15/",
            "related": {
                "admin_of_organizations": "/api/v2/users/15/admin_of_organizations/",
                "organizations": "/api/v2/users/15/organizations/",
                "roles": "/api/v2/users/15/roles/",
                "access_list": "/api/v2/users/15/access_list/",
                "teams": "/api/v2/users/15/teams/",
                "credentials": "/api/v2/users/15/credentials/",
                "activity_stream": "/api/v2/users/15/activity_stream/",
                "projects": "/api/v2/users/15/projects/"
            },
            "summary_fields": {
                "user_capabilities": {
                    "edit": true,
                    "delete": true
                }
            },
            "created": "2018-08-15T10:30:39.041Z",
            "username": "sysops2",
            "first_name": "Sysops2",
            "last_name": "Sysops2",
            "email": "sys@ops.com",
            "is_superuser": false,
            "is_system_auditor": false,
            "ldap_dn": "",
            "external_account": null,
            "auth": []
            },
            ```

           An export of all changes made to the system can be obtained at the
           API end-point: `/api/v2/activity_stream`. For example the following
           output indicates that a new project was created:
             ```
                "operation": "create",
            "changes": {
                "credential": null,
                "scm_branch": "",
                "name": "Meetup Demos",
                "scm_update_cache_timeout": 0,
                "scm_clean": false,
                "scm_url": "https://github.com/termlen0/meetups",
                "scm_delete_on_update": false,
                "local_path": "",
                "scm_type": "git",
                "timeout": 0,
                "scm_update_on_launch": false,
                "organization": "Default",
                "id": 29,
                "description": ""
            },
            ```

           The APIs themselves are available to all Tower users. However, the
           APIs are scoped to whatever that particular user is able to
           accomplish over the GUI. This is normal since all GUI components are
           built off of the API and there is a 1-1 relationship between the two.
           While the activity stream keeps track of the changes made, user
           clicks across the different APIs are not logged.

        - Import of Information (Success and Failure):

        Certain events, such as updating Projects, may pull data
        from a SCM. In such cases the audit event includes the content
        defined in AU-3 as well as the URL if the information being imported.

        A sample audit event for updating a "Demo Project" with content from
        GitHub is below. The "scm_url" field reflects source of information
        being imported and "status" field indicates succes or failure:

            {
                "count": 1,
                "next": null,
                "previous": null,
                "results": [
                    {
                        "id": 2,
                        "type": "project_update",
                        "url": "/api/v1/project_updates/2/",
                        "related": {
                            "created_by": "/api/v1/users/1/",
                            "unified_job_template": "/api/v1/projects/4/",
                            "stdout": "/api/v1/project_updates/2/stdout/",
                            "project": "/api/v1/projects/4/",
                            "cancel": "/api/v1/project_updates/2/cancel/",
                            "notifications": "/api/v1/project_updates/2/notifications/",
                            "scm_inventory_updates": "/api/v1/project_updates/2/scm_inventory_updates/"
                        },
                        "summary_fields": {
                            "instance_group": {
                                "id": 1,
                                "name": "tower"
                            },
                            "unified_job_template": {
                                "id": 4,
                                "name": "Demo Project",
                                "description": "",
                                "unified_job_type": "project_update"
                            },
                            "project": {
                                "id": 4,
                                "name": "Demo Project",
                                "description": "",
                                "status": "successful",
                                "scm_type": "git"
                            },
                            "created_by": {
                                "id": 1,
                                "username": "admin",
                                "first_name": "",
                                "last_name": ""
                            },
                            "user_capabilities": {
                                "start": true,
                                "delete": true
                            }
                        },
                        "created": "2018-06-29T16:31:37.862Z",
                        "modified": "2018-06-29T16:31:38.111Z",
                        "name": "Demo Project",
                        "description": "",
                        "unified_job_template": 4,
                        "launch_type": "manual",
                        "status": "successful",
                        "failed": false,
                        "started": "2018-06-29T16:31:38.190595Z",
                        "finished": "2018-06-29T16:31:41.932635Z",
                        "elapsed": 3.742,
                        "job_explanation": "",
                        "execution_node": "localhost",
                        "local_path": "_4__demo_project",
                        "scm_type": "git",
                        "scm_url": "https://github.com/ansible/ansible-tower-samples",
                        "scm_branch": "",
                        "scm_clean": false,
                        "scm_delete_on_update": false,
                        "credential": null,
                        "timeout": 0,
                        "project": 4,
                        "job_type": "check"
                    }

    - key: b
      text: |
        'Customers are required to allow defined personnel or roles to select
        which auditable events are to be audited by specific components of the
        information system. A successful control response will discuss how
        audit generation is implemented, and who selects and configures
        auditable events on the information system. Approved personnel or
        roles are defined in AU-9(4).

        Documentation/guidance on satisfying this control is being
        tracked on GitHub:

        https://github.com/ComplianceAsCode/redhat/issues/296'
    - key: c
      text: |
        'Customers are required to generate audit records for the events
        defined in AU-2d with the content defined in AU-3. A successful control
        response will discuss how audit records are generated, and how they meet
        the requirements defined in AU-2 and AU-3.

        Documentation/guidance on satisfying this control is being
        tracked on GitHub:

        https://github.com/ComplianceAsCode/redhat/issues/297'
##
## BEGINNING OF:
## SECURITY ASSESSMENT AND AUTHORIZATION
##

- control_key: CA-1
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: ''

- control_key: CA-2
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: ''

- control_key: CA-2 (1)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: ''

- control_key: CA-3
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: ''

- control_key: CA-5
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: ''

- control_key: CA-6
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: ''

- control_key: CA-7
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: ''

- control_key: CA-9
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: ''
##
## BEGINNING OF:
## CONFIGURATION MANAGEMENT
##

# ADMINISTRATORS NOTE ON CM-2:
#       Implimentation of this control varies greatly between customers. Some
#       want centralized config management, while others expect component
#       administrators to handle this (e.g. maintain custom Ansible scripts).
#       In Red Hat's OpenControl content CM-2 is handled at the PMO level,
#       however it's best to double check with the Information System owner
#       on expectations (component vs central CM).
#
#       In case the customer desires components (e.g. Red Hat Identity
#       Management Admins) to handle configuration management the
#       lines below can be uncommented:
#

- control_key: CM-1
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: ''

- control_key: CM-2
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: ''

- control_key: CM-4
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: ''

- control_key: CM-6
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: planned
  narrative:
    - key: a
      text: |
        'This is an organizational control outside the scope of configuring
        Ansible Tower. Use of the NIST National Checklist
        for Ansible Tower is suggested as a supported,
        US Government recognized, vendor supported, baseline.'
    - key: b
      text: |
        'The customer will be responsible for implementing configuration
        settings as defined in CM-6(a). A successful control response will
        describe how mandatory configuration settings are implemented. This can
        include the process or documentation followed.

        Creation of a Ansible Tower configuration baseline
        is being tracked on GitHub:

        https://github.com/ComplianceAsCode/redhat/issues/299'
    - key: c
      text: |
        'This is an organizational control outside the scope of configuring
        Ansible Tower.'
    - key: d
      text: |
        'The customer will be responsible for monitoring and controlling
        changes to the configuration settings in accordance with organization
        policies and procedures. A successful control response will describe
        how changes are controlled and monitored. This can include limitations
        to privileges, how these changes are audited, and any tools in place to
        track and approve changes.'

- control_key: CM-7
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: planned
  narrative:
    - text: |
        'Ensuring Ansible Tower is deployed in a minimal configuration
        is being tracked through GitHub:

        https://github.com/ComplianceAsCode/redhat/issues/300'

- control_key: CM-8
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: ''

- control_key: CM-10
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: ''

- control_key: CM-11
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: ''
##
## BEGINNING OF:
## CONTINGENCY PLANNING
##

- control_key: CP-1
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: ''

- control_key: CP-2
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: ''

- control_key: CP-3
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: ''

- control_key: CP-4
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: ''

- control_key: CP-9
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - key: a
      text: |
        'As a procedural control, the process of backing up Ansible Tower
        is outside the scope of a configuration guide.

        The customer will be responsible for conducting daily incremental and
        weekly full backups of user-level information contained in the
        information system. Additional FedRAMP requirements and guidance include
        maintaining at least three backup copies of user-level information (at
        least one of which is available online) or provides an equivalent
        alternative. A successful control response will detail how backups of
        user-level information occures, and how three backup copies are
        maintained.

        Documentation on backing up and restoring Ansible Tower data
        can be found in the Ansible Tower Administration guide:

        https://docs.ansible.com/ansible-tower/latest/html/administration/backup_restore.html'
    - key: b
      text: |
        'As a procedural control, the process of backing up Ansible Tower
        is outside the scope of a configuration guide.

        The customer will be responsible for conducting daily incremental and
        weekly full backups of system-level information contained in the
        information system. Additional FedRAMP requirements and guidance include
        maintaining at least three backup copies of user-level information (at
        least one of which is available online) or provides an equivalent
        alternative. A successful control response will detail how backups of
        user-level information occures, and how three backup copies are
        maintained.

        Documentation on backing up and restoring Ansible Tower data
        can be found in the Ansible Tower Administration guide:

        https://docs.ansible.com/ansible-tower/latest/html/administration/backup_restore.html'
    - key: c
      text: |
        'As a procedural control, the process of backing up Ansible Tower
        is outside the scope of a configuration guide.

        The customer will be responsible for conducting daily incremental and
        weekly full backups of information system documentation including
        security-related documentation. Additional FedRAMP requirements and
        guidance include maintaining at least three backup copies of user-level
        information (at least one of which is available online) or provides an
        equivalent alternative. A successful control response will detail how
        backups of user-level information occures, and how three backup copies
        are maintained.

        Documentation on backing up and restoring Ansible Tower data
        can be found in the Ansible Tower Administration guide:

        https://docs.ansible.com/ansible-tower/latest/html/administration/backup_restore.html'
    - key: d
      text: |
        'As a procedural control, the process of backing up Ansible Tower
        is outside the scope of a configuration guide.

        The customer will be responsible for protecting the confidentiality,
        integrity, and available of backup information at storage locations.
        Additional FedRAMP requirements and guidance include determining
        what elements of the cloud environment require the Information System
        Backup control. The customer will determine how Information System
        Backup is going to be verified and appropriate periodicity of the
        check.

        Documentation on backing up and restoring Ansible Tower data
        can be found in the Ansible Tower Administration guide:

        https://docs.ansible.com/ansible-tower/latest/html/administration/backup_restore.html'

- control_key: CP-10
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: complete
  narrative:
    - text: |
        'Guidance on establishing backup procedures can be found in the
        Ansible Tower Administration Guide:

        https://docs.ansible.com/ansible-tower/latest/html/administration/backup_restore.html

        Note that backup of the Ansible Tower database and Ansible Tower playbooks
        reflects two distinct processes.'
##
## BEGINNING OF:
## IDENTIFICATION AND AUTHENTICATION
##
- control_key: IA-1
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: ''

- control_key: IA-2
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: |
        'Ansible Tower does not have the capability to uniquely identify and
        authenticate organizational users (or processes acting on
        behalf of organizational users).

        To satisfy this control an external authentication service, such
        as Red Hat IdM, must be used. This control is not applicable to
        Ansible Tower when an external authentication service is used.'

- control_key: IA-2 (1)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: planned
  narrative:
    - text: |
        'The customer will be responsible for implementing multifactor
        authentication for network access to privileged accounts.

        A successful control response will need to address all network-
        accessible privileged account types and the means by which
        multifactor authentication is enforced for each.

        Documentation/guidance is being tracked through GitHub:
        https://github.com/ComplianceAsCode/redhat/issues/305'

- control_key: IA-2 (12)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: planned
  narrative:
    - text: |
        'Personal Identity Verification (PIV) credentials are those credentials
        issued by federal agencies that conform to FIPS Publication 201 and
        supporting guidance documents. Customers will not be expected to perform
        this credential verification for government agencies. A mechanism for
        allowing government agencies to perform credential verification in a way
        that can be trusted by the customer system is through Active Directory
        Federation Services (ADFS).

        Documentation/guidance for this control is being tracked on GitHub:

        https://github.com/ComplianceAsCode/redhat/issues/306'

- control_key: IA-4
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - key: a
      text: |
        'This is an organizational control outside the scope of configuring
        Ansible Tower.'
    - key: b
      text: |
        'This is an organizational control outside the scope of configuring
        Ansible Tower.'
    - key: c
      text: |
        'This is an organizational control outside the scope of configuring
        Ansible Tower.'
    - key: d
      text: |
        'Ansible Tower does not have the capability to prevent the
        reuse of identifiers for an organizationally-defined time period.

        To satisfy this control an external authentication service, such
        as Red Hat IdM, must be used. This control is not applicable to
        Ansible Tower when an external authentication service is used.'
    - key: e
      text: |
        'Ansible Tower does not have the capability to disable an identifier
        after an organizationally-defined time period of inactivity.

        To satisfy this control an external authentication service, such
        as Red Hat IdM, must be used. This control is not applicable to
        Ansible Tower when an external authentication service is used.'

- control_key: IA-5
  standard_key: NIST-800-53
  covered_by: []
  # NOTE: Because sub keys cannot have their own implementation_status,
  # using 'complete' to indicate overall satisfaction of requirements,
  # even if certain sub keys are not applicable.
  implementation_status: complete
  narrative:
    - key: a
      text: |
        'This is an organizational control outside the scope of configuring
        Ansible Tower.'
    - key: b
      text: |
        'Ansible Tower does not have the capability to establish initial
        authenticator content for authenticators defined by the organization
        (e.g. complexity requirements in IA-4).

        To satisfy this control an external authentication service, such
        as Red Hat IdM, must be used. This control is not applicable to
        Ansible Tower when an external authentication service is used.'
    - key: c
      text: |
        'Ansible Tower does not have the capability to ensure that
        authenticators have sufficient strength of mechanism for their
        intended use.

        To satisfy this control an external authentication service, such
        as Red Hat IdM, must be used. This control is not applicable to
        Ansible Tower when an external authentication service is used.'
    - key: d
      text: |
        'This is an organizational control outside the scope of configuring
        Ansible Tower.'
    - key: e
      text: |
        'Ansible Tower does not have default account authenticators.
        Authenticators used during the installation of Ansible Tower,
        such as passwords for the embeded database, are created by the
        system administratur during the Ansible Tower installation.
        This is non-configurable behavior.

        This requirement is not applicable to the
        configuration of Ansible Tower.'
    - key: f
      text: |
        'Ansible Tower does not have the capability to establish
        minimum and maximum lifetime restrictions and reuse
        conditions for authenticators.

        To satisfy this control an external authentication service,
        such as Red Hat IdM, must be used. This control is not
        applicable to Ansible Tower when an external authentication
        service is used.'
    - key: g
      text: |
        'Ansible Tower does not have the capability to change/refresh
        authenticators after an organizationally-defined time period
        by authenticator type.

        To satisfy this control an external authentication service,
        such as Red Hat IdM, must be used. This control is not
        applicable to Ansible Tower when an external authentication
        service is used.'
    - key: h
      text: |
        'Ansible Tower uses SSH to connect to remote hosts (or the Windows
        equivalent). In order to pass the key from Tower to SSH, the key must
        be decrypted before it can be written to a named pipe. Tower then uses
        that pipe to send the key to SSH (so that it is never written to disk).

        If passwords are used, Ansible Tower handles those by responding
        directly to the password prompt and decrypting the password before
        writing it to the prompt.

        The encryption/decryption algorithm uses a variation of Fernet: a
        symmetric encryption cipher utilizing AES-256 in CBC mode alongside
        a SHA-256 HMAC. Specific, sensitive, Model fields in Tower are
        encrypted and include:

        CREDENTIAL
          - password
          - ssh_key_data
          - ssh_key_unlock
          - become_password
          - vault_password

        UNIFIED JOB:
          - start_args

        Data is encrypted before it is saved to the database and it is
        decrypted as needed in Tower. The encryption/decryption process
        derives the AES-256 bit encryption key from
        <SECRET_KEY, field_name, primary_key> where field_name is the
        field_name of the Model field and primary_key is the database assigned
        auto-incremented record ID. Thus, if any attribute used in the key
        generation process changes, Tower fails to correctly decrypt the
        secret.'
    - key: i
      text: |
        'This is an organizational control outside the scope of configuring
        Ansible Tower.'
    - key: j
      text: |
        'This is an organizational control outside the scope of configuring
        Ansible Tower.'

- control_key: IA-5 (1)
  standard_key: NIST-800-53
  covered_by: []
  # NOTE: Because sub keys cannot have their own implementation_status,
  # using 'complete' to indicate overall satisfaction of requirements,
  # even if certain sub keys are not applicable.
  implementation_status: complete
  narrative:
    - key: a
      text: |
        'Ansible Tower does not have the capability to enforce minimum
        password complexity requirements.

        To satisfy this control an external authentication service, such
        as Red Hat IdM, must be used. This control is not applicable to
        Ansible Tower when an external authentication service is used.'
    - key: b
      text: |
        'Ansible Tower does not have the capability to enforce at least
        an organizationally-defined number of characters be changed
        when new passwords are created.

        To satisfy this control an external authentication service, such
        as Red Hat IdM, must be used. This control is not applicable to
        Ansible Tower when an external authentication service is used.'
    - key: c
      text: |
        'If passwords are used, Ansible Tower handles those by responding
        directly to the password prompt and decrypting the password before
        writing it to the prompt.

        The encryption/decryption algorithm uses a variation of Fernet: a
        symmetric encryption cipher utilizing AES-256 in CBC mode alongside
        a SHA-256 HMAC. Specific, sensitive, Model fields in Tower are
        encrypted and include:

        CREDENTIAL
          - password
          - ssh_key_data
          - ssh_key_unlock
          - become_password
          - vault_password

        UNIFIED JOB:
          - start_args

        Data is encrypted before it is saved to the database and it is
        decrypted as needed in Tower. The encryption/decryption process
        derives the AES-256 bit encryption key from
        <SECRET_KEY, field_name, primary_key> where field_name is the
        field_name of the Model field and primary_key is the database assigned
        auto-incremented record ID. Thus, if any attribute used in the key
        generation process changes, Tower fails to correctly decrypt the
        secret.'
    - key: d
      text: |
        'Ansible Tower does not have the capability to enforce password
        minimum and maximum lifetime restrictions.

        To satisfy this control an external authentication service, such
        as Red Hat IdM, must be used. This control is not applicable to
        Ansible Tower when an external authentication service is used.'
    - key: e
      text: |
        'Ansible Tower does not have the capability prohibit password
        reuse.

        To satisfy this control an external authentication service, such
        as Red Hat IdM, must be used. This control is not applicable to
        Ansible Tower when an external authentication service is used.'
    - key: f
      text: |
        'Ansible Tower does not have the capability allow the use of a
        temporary password for system logons with an immediate change
        to a permanent password.

        To satisfy this control an external authentication service, such
        as Red Hat IdM, must be used. This control is not applicable to
        Ansible Tower when an external authentication service is used.'

- control_key: IA-5 (11)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: ''

- control_key: IA-6
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: complete
  narrative:
    - text: |
        'Ansible Tower natively obscures such information.
        Ansible Tower cannot be configured to be out of
        compliance with this requirement.'

- control_key: IA-7
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: none
  narrative:
    - text: |
        'It is currently not possible to configure Ansible Tower to use
        appropriate cryptographic modules. This is a permanent finding.'

- control_key: IA-8
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: |
        'Ansible Tower does not have the capability to uniquely
        identify and authenticate non-organizational users (or
        processes acting on behalf of non-organizational users).

        To satisfy this control an external authentication service, such
        as Red Hat IdM, must be used. This control is not applicable to
        Ansible Tower when an external authentication service is used.'

- control_key: IA-8 (1)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: planned
  narrative:
    - text: |
        'Personal Identity Verificiation (PIV) credentials are those
        credentials issued by federal agencies that conform to FIPS Publication
        201 and supporting guidance documents. Customers will not be expected
        to perform this credential verification for government agencies. A
        mechanism for allowing government agencies to perform credential
        verification in a way that can be trusted by the customer system is
        through Active Directory Federation Services (ADFS) or Red Hat IdM.'

- control_key: IA-8 (2)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: |
        'FICAM approved credentials are those credentials issued by nonfederal
        government entities approved by the Federal Identity, Credential, and
        Access Management (FICAM) Trust Framework Solutions Initiative.
        Customers iwill not be expected to perform credential veritification for
        government agencies. A mechanism for allowing government agencies to
        perform credential verification in a way that can be trusted by the
        customer system is through Active Directory Federation Services
        (ADFS) or Red Hat IdM.'

- control_key: IA-8 (3)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: |
        'FICAM approved credentials are those credentials issued by nonfederal
        government entities approved by the Federal Identity, Credential, and
        Access Management (FICAM) Trust Framework Solutions Initiative.
        Customers iwill not be expected to perform credential veritification for
        government agencies. A mechanism for allowing government agencies to
        perform credential verification in a way that can be trusted by the
        customer system is through Active Directory Federation Services
        (ADFS) or Red Hat IdM.'

- control_key: IA-8 (4)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: |
        'FICAM approved credentials are those credentials issued by nonfederal
        government entities approved by the Federal Identity, Credential, and
        Access Management (FICAM) Trust Framework Solutions Initiative.
        Customers will not be expected to perform credential veritification for
        government agencies. A mechanism for allowing government agencies to
        perform credential verification in a way that can be trusted by the
        customer system is through Active Directory Federation Services
        (ADFS) or Red Hat IdM.'
##
## BEGINNING OF:
## INCIDENT RESPONSE
##
- control_key: IR-1
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: |
        'This control reflects organizational procedure/policy and is not
        applicable to component-level configuration.'

- control_key: IR-2
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: |
        'This control reflects organizational procedure/policy and is not
        applicable to component-level configuration.'

##
## Note to content authors:
##  IR-2 (1) relates to creating simulated events/scenarios
##  relating to incident response. While this is an organizational
##  control, consider creating component-specific incident
##  response simulations as appropriate (e.g. if a virtualization
##  product, what happens after a VM escape?).
##
- control_key: IR-2 (1)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: |
        'This control reflects organizational procedure/policy and is not
        applicable to component-level configuration.'

- control_key: IR-2 (2)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: |
        'This control reflects organizational procedure/policy and is not
        applicable to component-level configuration.'

- control_key: IR-3
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: |
        'This control reflects organizational procedure/policy and is not
        applicable to component-level configuration.'

- control_key: IR-3 (1)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: |
        'This control reflects organizational procedure/policy and is not
        applicable to component-level configuration.'

- control_key: IR-3 (2)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: |
        'This control reflects organizational procedure/policy and is not
        applicable to component-level configuration.'

- control_key: IR-4
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: |
        'This control reflects organizational procedure/policy and is not
        applicable to component-level configuration.'

- control_key: IR-4 (1)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: |
        'This control reflects organizational procedure/policy and is not
        applicable to component-level configuration.'

##
## Note to content authors:
##  IR-4 (2) is *technically* an organizational control, however
##  many accreditors/auditors will want to understand how the
##  system component integrates with dynamic reconfiguration capabilities.
##  Lacking formal guidance from the government, some auditors expect a
##  response to this control at the component level.
##
- control_key: IR-4 (2)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: |
        'This control reflects organizational procedure/policy and is not
        applicable to component-level configuration.'

- control_key: IR-4 (3)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: |
        'This control reflects organizational procedure/policy and is not
        applicable to component-level configuration.'

- control_key: IR-4 (4)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: |
        'This control reflects organizational procedure/policy and is not
        applicable to component-level configuration.'

- control_key: IR-4 (5)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: |
        'This control reflects organizational procedure/policy and is not
        applicable to component-level configuration.'

- control_key: IR-4 (6)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: |
        'This control reflects organizational procedure/policy and is not
        applicable to component-level configuration.'

- control_key: IR-4 (7)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: |
        'This control reflects organizational procedure/policy and is not
        applicable to component-level configuration.'

- control_key: IR-4 (8)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: |
        'This control reflects organizational procedure/policy and is not
        applicable to component-level configuration.'

- control_key: IR-4 (9)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: |
        'This control reflects organizational procedure/policy and is not
        applicable to component-level configuration.'

- control_key: IR-4 (10)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: |
        'This control reflects organizational procedure/policy and is not
        applicable to component-level configuration.'

- control_key: IR-4 (10)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: |
        'This control reflects organizational procedure/policy and is not
        applicable to component-level configuration.'

- control_key: IR-5
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: |
        'This control reflects organizational procedure/policy and is not
        applicable to component-level configuration.'

##
## Note to content authors:
##  Often 3rd party auditors will incorrectly state satisfaction of IR-5 (1)
##  relates to centralized audit logging of security events.
##
##  Central audit logging is covered under other controls, namely:
##  - AU-6 (3) - Correlate Audit Repositories
##  - AU-6 (4) - Central Review and Analysis
##  - AU-12 - Audit Generation
##
- control_key: IR-5 (1)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: |
        'This control reflects organizational procedure/policy and is not
        applicable to component-level configuration.'

- control_key: IR-6
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: |
        'This control reflects organizational procedure/policy and is not
        applicable to component-level configuration.'

- control_key: IR-6 (1)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: |
        'This control reflects organizational procedure/policy and is not
        applicable to component-level configuration.'

- control_key: IR-6 (2)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: |
        'This control reflects organizational procedure/policy and is not
        applicable to component-level configuration.'

- control_key: IR-6 (3)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: |
        'This control reflects organizational procedure/policy and is not
        applicable to component-level configuration.'

- control_key: IR-7
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: |
        'This control reflects organizational procedure/policy and is not
        applicable to component-level configuration.'

- control_key: IR-7 (1)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: |
        'This control reflects organizational procedure/policy and is not
        applicable to component-level configuration.'

- control_key: IR-7 (2)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: |
        'This control reflects organizational procedure/policy and is not
        applicable to component-level configuration.'

- control_key: IR-8
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: |
        'This control reflects organizational procedure/policy and is not
        applicable to component-level configuration.'

- control_key: IR-9
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: |
        'This control reflects organizational procedure/policy and is not
        applicable to component-level configuration.'

- control_key: IR-9 (1)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: |
        'This control reflects organizational procedure/policy and is not
        applicable to component-level configuration.'

- control_key: IR-9 (2)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: |
        'This control reflects organizational procedure/policy and is not
        applicable to component-level configuration.'

- control_key: IR-9 (3)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: |
        'This control reflects organizational procedure/policy and is not
        applicable to component-level configuration.'

- control_key: IR-9 (4)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: |
        'This control reflects organizational procedure/policy and is not
        applicable to component-level configuration.'

- control_key: IR-10
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: |
        'This control reflects organizational procedure/policy and is not
        applicable to component-level configuration.'
##
## BEGINNING OF:
## MAINTENANCE
##

- control_key: MA-1
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: ''

- control_key: MA-2
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: ''

- control_key: MA-4
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: ''

- control_key: MA-5
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: ''
##
## BEGINNING OF:
## MEDIA PROTECTION
##

- control_key: MP-1
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: ''

- control_key: MP-2
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: ''

- control_key: MP-6
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: ''

- control_key: MP-7
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: ''
##
## BEGINNING OF:
## PHYSICAL AND ENVIRONMENTAL PROTECTION
##

- control_key: PE-1
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: 'This control is outside the scope of Ansible Tower configuration.'

- control_key: PE-2
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: 'This control is outside the scope of Ansible Tower configuration.'

- control_key: PE-2 (1)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: 'This control is outside the scope of Ansible Tower configuration.'

- control_key: PE-2 (2)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: 'This control is outside the scope of Ansible Tower configuration.'

- control_key: PE-2 (3)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: 'This control is outside the scope of Ansible Tower configuration.'

- control_key: PE-3
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: 'This control is outside the scope of Ansible Tower configuration.'

- control_key: PE-3 (1)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: 'This control is outside the scope of Ansible Tower configuration.'

- control_key: PE-3 (2)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: 'This control is outside the scope of Ansible Tower configuration.'

- control_key: PE-3 (3)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: 'This control is outside the scope of Ansible Tower configuration.'

- control_key: PE-3 (4)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: 'This control is outside the scope of Ansible Tower configuration.'

- control_key: PE-3 (5)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: 'This control is outside the scope of Ansible Tower configuration.'

- control_key: PE-3 (6)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: 'This control is outside the scope of Ansible Tower configuration.'

- control_key: PE-4
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: 'This control is outside the scope of Ansible Tower configuration.'

- control_key: PE-5
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: 'This control is outside the scope of Ansible Tower configuration.'

- control_key: PE-5 (1)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: 'This control is outside the scope of Ansible Tower configuration.'

- control_key: PE-5 (2)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: 'This control is outside the scope of Ansible Tower configuration.'

- control_key: PE-5 (3)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: 'This control is outside the scope of Ansible Tower configuration.'

- control_key: PE-6
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: 'This control is outside the scope of Ansible Tower configuration.'

- control_key: PE-6 (1)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: 'This control is outside the scope of Ansible Tower configuration.'

- control_key: PE-6 (2)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: 'This control is outside the scope of Ansible Tower configuration.'

- control_key: PE-6 (3)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: 'This control is outside the scope of Ansible Tower configuration.'

- control_key: PE-6 (4)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: 'This control is outside the scope of Ansible Tower configuration.'

- control_key: PE-7
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: 'This control is outside the scope of Ansible Tower configuration.'

- control_key: PE-8
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: 'This control is outside the scope of Ansible Tower configuration.'

- control_key: PE-8 (1)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: 'This control is outside the scope of Ansible Tower configuration.'

- control_key: PE-8 (2)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: 'This control is outside the scope of Ansible Tower configuration.'

- control_key: PE-9
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: 'This control is outside the scope of Ansible Tower configuration.'

- control_key: PE-9 (1)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: 'This control is outside the scope of Ansible Tower configuration.'

- control_key: PE-9 (2)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: 'This control is outside the scope of Ansible Tower configuration.'

- control_key: PE-10
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: 'This control is outside the scope of Ansible Tower configuration.'

- control_key: PE-10 (1)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: 'This control is outside the scope of Ansible Tower configuration.'

- control_key: PE-11
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: 'This control is outside the scope of Ansible Tower configuration.'

- control_key: PE-11 (1)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: 'This control is outside the scope of Ansible Tower configuration.'

- control_key: PE-11 (2)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: 'This control is outside the scope of Ansible Tower configuration.'

- control_key: PE-12
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: 'This control is outside the scope of Ansible Tower configuration.'

- control_key: PE-12 (1)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: 'This control is outside the scope of Ansible Tower configuration.'

- control_key: PE-13
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: 'This control is outside the scope of Ansible Tower configuration.'

- control_key: PE-13 (1)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: 'This control is outside the scope of Ansible Tower configuration.'

- control_key: PE-13 (2)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: 'This control is outside the scope of Ansible Tower configuration.'

- control_key: PE-13 (3)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: 'This control is outside the scope of Ansible Tower configuration.'

- control_key: PE-13 (4)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: 'This control is outside the scope of Ansible Tower configuration.'

- control_key: PE-14
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: 'This control is outside the scope of Ansible Tower configuration.'

- control_key: PE-14 (1)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: 'This control is outside the scope of Ansible Tower configuration.'

- control_key: PE-14 (2)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: 'This control is outside the scope of Ansible Tower configuration.'

- control_key: PE-15
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: 'This control is outside the scope of Ansible Tower configuration.'

- control_key: PE-15 (1)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: 'This control is outside the scope of Ansible Tower configuration.'

- control_key: PE-16
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: 'This control is outside the scope of Ansible Tower configuration.'

- control_key: PE-17
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: 'This control is outside the scope of Ansible Tower configuration.'

- control_key: PE-18
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: 'This control is outside the scope of Ansible Tower configuration.'

- control_key: PE-18 (1)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: 'This control is outside the scope of Ansible Tower configuration.'

- control_key: PE-19
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: 'This control is outside the scope of Ansible Tower configuration.'

- control_key: PE-19 (1)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: 'This control is outside the scope of Ansible Tower configuration.'

- control_key: PE-20
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: 'This control is outside the scope of Ansible Tower configuration.'
##
## BEGINNING OF:
## PLANNING
##

- control_key: PL-1
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: |
        'This control reflects organizational procedure/policy and is not
        applicable to component-level configuration.'

- control_key: PL-2
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: |
        'This control reflects organizational procedure/policy and is not
        applicable to component-level configuration.'

- control_key: PL-2 (1)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: |
        'As of NIST 800-53 rev4 this control was withdrawn
        and incorporated into PL-7.'

- control_key: PL-2 (2)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: |
        'As of NIST 800-53 rev4 this control was withdrawn
        and incorporated into PL-8.'

- control_key: PL-2 (3)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: |
        'This control reflects organizational procedure/policy and is not
        applicable to component-level configuration.'

- control_key: PL-3
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: |
        'As of NIST 800-53 rev4 this control was withdrawn
        and incorporated into PL-2.'

- control_key: PL-4
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: |
        'This control reflects organizational procedure/policy and is not
        applicable to component-level configuration.'

- control_key: PL-4 (1)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: |
        'This control reflects organizational procedure/policy and is not
        applicable to component-level configuration.'

- control_key: PL-5
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: |
        'As of NIST 800-53 rev4 this control was withdrawn
        and incorporated into Appendix J, AR-2.'

- control_key: PL-6
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: |
        'As of NIST 800-53 rev4 this control was withdrawn
        and incorporated into PL-2.'

- control_key: PL-7
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: |
        'This control reflects organizational procedure/policy and is not
        applicable to component-level configuration.'

- control_key: PL-8
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: |
        'This control reflects organizational procedure/policy and is not
        applicable to component-level configuration.'

- control_key: PL-8 (1)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: |
        'This control reflects organizational procedure/policy and is not
        applicable to component-level configuration.'

- control_key: PL-8 (2)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: |
        'This control reflects organizational procedure/policy and is not
        applicable to component-level configuration.'

- control_key: PL-9
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: |
        'This control reflects organizational procedure/policy and is not
        applicable to component-level configuration.'
##
## BEGINNING OF:
## PERSONNEL SECURITY
##

- control_key: PS-1
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: ''

- control_key: PS-2
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: ''

- control_key: PS-3
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: ''

- control_key: PS-4
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: ''

- control_key: PS-5
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: ''

- control_key: PS-6
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: ''

- control_key: PS-7
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: ''

- control_key: PS-8
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: ''
##
## BEGINNING OF:
## RISK ASSESSMENT
##

- control_key: RA-1
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: ''

- control_key: RA-2
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: ''

- control_key: RA-3
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: ''

- control_key: RA-5
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: ''
##
## BEGINNING OF:
## SYSTEM AND SERVICES ACQUISITION
##

- control_key: SA-1
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: |
        'This control reflects organizational procedure/policy and is not
        applicable to component-level configuration.'

- control_key: SA-2
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: |
        'This control reflects organizational procedure/policy and is not
        applicable to component-level configuration.'

- control_key: SA-3
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: |
        'This control reflects organizational procedure/policy and is not
        applicable to component-level configuration.'

- control_key: SA-4
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: |
        'This control reflects organizational procedure/policy and is not
        applicable to component-level configuration.'

##
## Developers note on SA-4 (1):
##  This control requires that developers of system components, e.g.
##  application servers, to provide a description of the functional
##  properties of the security controls to be deployed.
##
##  A a generally accepted control response is to provide a security
##  configuration guide, such as a NIST National Checklist or DoD
##  STIG, for the component.
##
##  In absense of an approved government configuration baseline,
##  note this requirement is satisfied by a *description* of
##  functional properties. Implimentation details are offered in
##  SA-4(2).
##
- control_key: SA-4 (1)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: planned
  narrative:
    - text: |
        'A control response to SA-4 (1) is planned.'

##
## Developers note on SA-4 (2):
##  This control differs from SA-4 (1) in that implementation
##  details are now required.
##
##  The majority of FedRAMP and FISMA Moderate systems refine this control
##  with the following:
##    - Provide design and implementation regarding security-relevant
##      external system interfaces and high-level design;
##    - Provide design and implementation information required by the
##      SDL process;
##    - Above should be provided with a level of detail sufficient for
##      secure deployment.
##
- control_key: SA-4 (2)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: planned
  narrative:
    - text: |
        'A control response to SA-4 (2) is planned.'

##
## Developers note on SA-4 (3):
##  This is most frequently satisfied by demonstrating common criteria
##  certification.
##
##  Lacking Common Criteria certification a detailed outline of SDLC practices
##  is required.
##
- control_key: SA-4 (3)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: planned
  narrative:
    - text: |
        'A control response to SA-4 (3) is planned.'

- control_key: SA-4 (4)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: |
        'As of NIST 800-53 rev4 this control was withdrawn
        and incorporated into CM-8 (9).'

##
## Developers note on SA-4 (4):
##  Note: For software components, such as operating systems, NIST considers it
##  sufficient to provide install-time configuration. For example in RHEL7 a
##  "Security Profile" menu is presented that installs Linux into known government
##  baselines.
##
- control_key: SA-4 (5)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: planned
  narrative:
    - text: |
        'A control response to SA-4 (5) is planned.'

##
## Developers note on SA-4 (6):
##  Note this is only applicable "when the networks used to transmit
##  the information are at a lower classification than the information
##  being transmitted."
##
##  If this component is not intended to enable cross domain infrastructure,
##  this control potentially could be 'not applicable'.
##
- control_key: SA-4 (6)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: planned
  narrative:
    - text: |
        'A control response to SA-4 (6) is planned.'

##
## Developers note on SA-4 (7):
##  As of 2018, protection profiles recognized by NIAP and those recognized
##  by the broader Common Criteria effort have diverged. A listing of NIAP-
##  recognized protection profiles can be found here:
##
##  https://www.niap-ccevs.org/Profile/PP.cfm
##
- control_key: SA-4 (7)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: planned
  narrative:
    - text: |
        'A control response to SA-4 (7) is planned.'

##
## Developers note on SA-4 (8):
##  A successful control response will document how to achieve continuous
##  monitoring of control/standards as identified in CA-7.
##
- control_key: SA-4 (8)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: planned
  narrative:
    - text: |
        'A control response to SA-4 (8) is planned.'

##
## Developers note on SA-4 (9):
##  A successful control response will document all network
##  information. Take care to document internal network usage,
##  including loopback devices, as it is customary to block all
##  traffic not explicitly outlined in this control.
##
- control_key: SA-4 (9)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: planned
  narrative:
    - text: |
        'A control response to SA-4 (9) is planned.'

- control_key: SA-4 (10)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: |
        'This control reflects organizational procedure/policy and is not
        applicable to component-level configuration.'

- control_key: SA-5
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: |
        'This control reflects organizational procedure/policy and is not
        applicable to component-level configuration.'

- control_key: SA-5 (1)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: |
        'As of NIST 800-53 rev4 this control was withdrawn
        and incorporated into SA-4 (1).'

- control_key: SA-5 (2)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: |
        'As of NIST 800-53 rev4 this control was withdrawn
        and incorporated into SA-4 (2).'

- control_key: SA-5 (3)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: |
        'As of NIST 800-53 rev4 this control was withdrawn
        and incorporated into SA-4 (3).'

- control_key: SA-5 (4)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: |
        'As of NIST 800-53 rev4 this control was withdrawn
        and incorporated into SA-4 (4).'

- control_key: SA-5 (5)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: |
        'As of NIST 800-53 rev4 this control was withdrawn
        and incorporated into SA-4 (5).'

- control_key: SA-6
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: |
        'As of NIST 800-53 rev4 this control was withdrawn
        and incorporated into CM-10 and SI-7.'

- control_key: SA-7
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: |
        'As of NIST 800-53 rev4 this control was withdrawn
        and incorporated into CM-11 and SI-7.'

- control_key: SA-8
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: |
        'This control reflects organizational procedure/policy and is not
        applicable to component-level configuration.'

- control_key: SA-9
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: |
        'This control reflects organizational procedure/policy and is not
        applicable to component-level configuration.'

- control_key: SA-9 (1)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: |
        'This control reflects organizational procedure/policy and is not
        applicable to component-level configuration.'

- control_key: SA-9 (2)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: |
        'This control reflects organizational procedure/policy and is not
        applicable to component-level configuration.'

- control_key: SA-9 (3)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: |
        'This control reflects organizational procedure/policy and is not
        applicable to component-level configuration.'

- control_key: SA-9 (4)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: |
        'This control reflects organizational procedure/policy and is not
        applicable to component-level configuration.'

- control_key: SA-9 (5)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: |
        'This control reflects organizational procedure/policy and is not
        applicable to component-level configuration.'

##
## Developers note on SA-10
##  A successful control response will document all network
##  information. Take care to document internal network usage,
##  including loopback devices, as it is customary to block all
##  traffic not explicitly outlined in this control.
##
- control_key: SA-10
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: planned
  narrative:
    ## A successful control response will document performance of configuration
    ## management. Processes and mechanisms involved in configuration management
    ## will need to be addressed.
    - key: a
      text: |
        'A control response to SA-10 (a) is planned.'

    ## A successful control response will need to address the processes
    ## and mechanisms involved in documenting, managing, and controlling the
    ## integrity of chances.
    - key: b
      text: |
        'A control response to SA-10 (b) is planned.'

    ## A successful control response will need to address the approval process
    ## and safeguards in place to ensure only approved changes are implemented.
    - key: c
      text: |
        'A control response to SA-10 (c) is planned.'

    ## A successful control response will need to discuss the process for
    ## documentation.
    - key: d
      text: |
        'A control response to SA-10 (d) is planned.'

    ## A successful control response will need to discuss the process
    ## and tools used for tracking, resolution, and reporting.
    - key: e
      text: |
        'A control response to SA-10 (e) is planned.'

##
## Developers note on SA-10 (1)
##  A successful controlr response will need to address the process and
##  mechanisms involved in integrity verification.
##
##  For example, TPM+TXT for hardware and operating systems.
##
- control_key: SA-10 (1)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: planned
  narrative:
    - text: |
        'A control response to SA-10 (1) is planned.'

- control_key: SA-10 (2)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: |
        'This control reflects organizational procedure/policy and is not
        applicable to component-level configuration.'

##
## Developers note on SA-10 (3)
##  This control differs from SA-10 (1) by focusing on hardware
##  (vs software and firmware).
##
##  This control may not be applicable if the component being documented
##  is not involved in the system boot process.
##
- control_key: SA-10 (3)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: planned
  narrative:
    - text: |
        'A control response to SA-10 (1) is planned.'

##
## Developers note on SA-10 (4)
##  This control may not be applicable if the component being documented
##  is not involved in the system boot process.
##
- control_key: SA-10 (4)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: planned
  narrative:
    - text: |
        'A control response to SA-10 (4) is planned.'

##
## Developers note on SA-10 (4)
##  tbd
##
- control_key: SA-10 (5)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: planned
  narrative:
    - text: |
        'A control response to SA-10 (5) is planned.'

##
## Developers note on SA-10 (4)
##  tbd
##
- control_key: SA-10 (6)
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: planned
  narrative:
    - text: |
        'A control response to SA-10 (6) is planned.'
##
## BEGINNING OF:
## SYSTEMS AND COMMUNICATIONS PROTECTION
##

- control_key: SC-1
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: ''

- control_key: SC-5
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: planned
  narrative:
    - text: |
        'Documentation of anti-dential of service capabilities is being
        tracked on GitHub:

        https://github.com/ComplianceAsCode/redhat/issues/333'

- control_key: SC-7
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: ''

- control_key: SC-12
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: planned
  narrative:
    - text: |
        'Documentation regarding how Ansible Tower generates,
        distributes, stores,
        accesses, and desctructs, cryptographic keys is forthcoming. This
        activity is being tracked in GitHub:

        https://github.com/ComplianceAsCode/redhat/issues/334'

- control_key: SC-13
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: planned
  narrative:
    - text: |
        'Documentation regarding Ansible Tower's usage of
        cryptography and applicability to Federal laws is forthcoming. This
        activity is being tracked in GitHub:

        https://github.com/ComplianceAsCode/redhat/issues/335'

- control_key: SC-15
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: |
        ''

- control_key: SC-20
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: |
        ''

- control_key: SC-21
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: |
        ''

- control_key: SC-22
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: |
        ''

- control_key: SC-39
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: planned
  narrative:
    - text: |
        'Documentation on ensuring this functionality is
        configured is forthcoming.
        This activity is being tracked in GitHub:

        https://github.com/ComplianceAsCode/redhat/issues/336'
##
## BEGINNING OF:
## SYSTEM AND INFORMATION INTEGRITY
##
- control_key: SI-1
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: ''

- control_key: SI-2
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: ''

- control_key: SI-3
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: ''

- control_key: SI-4
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: ''

- control_key: SI-5
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: ''

- control_key: SI-12
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: planned
  narrative:
    - text: |
        'The customer will be responsible for handling and retaining
        information within, or hosted by, Ansible Tower in
        accordance with applicable federal laws, Executive Orders,
        directives, policies, regulations, standards, and operational
        requirements. A successful control response will need to outline
        the specific requirements applicable to customer information
        handling and retention, and the means by which those requirements
        are met.

        Documentation and suggestions on protecting customer information
        hosted within the Ansible Tower environment
        is forthcoming. This activity
        is being tracked in GitHub:

        https://github.com/ComplianceAsCode/redhat/issues/337'

- control_key: SI-16
  standard_key: NIST-800-53
  covered_by: []
  implementation_status: not applicable
  narrative:
    - text: ''
